
// vector: 动态数组；map 哈希表 
#include<vector>
vector<int>test; //定义一个vector动态数组，数据类型为int，test为数组名

test.push_back(1);//把1压入vector，
test.push_back(2); //把2压入vector，变成test[0] = 1,test[1]=2

test.insert(test.begin()+I,3); //在第i+1个元素前插入3
test.erase(vec.begin()+2); //删除第3个元素

test.size(); //大小
test.clear(); //清空

////////// 二维数组，指针形式， //////
1. int out[3][2] = { 1, 2, 3, 4, 5, 6 };
2. vector <int*> v1; //接收二维数组的定义方法（指针）
3. v1.push_back(out[0]); //每行首地址压入
4. v1.push_back(out[1]);
5. v1.push_back(out[2]);
6. cout << v1[0][0] << endl;//1 
7. cout << v1[0][1] << endl;//2
8. cout << v1[1][0] << endl;//3
9. cout << v1[1][1] << endl;//4
10. cout << v1[2][0] << endl;//5
11. cout << v1[2][1] << endl;//6
//----------------------------------------------

#include<map>
#include<string> //字符串操作必备

//pair （对组）为对象，将一对值组合成一个值，含有first和second两个公有函数
	cout << pair<int, string>(1, "fs").second << endl;//pair 例子1
	pair<int, string>p1(1, "sss");
	cout << p1.first << endl; //pair 例子2

	//map应用
	map<string, string> mapStudent;//声明变量（string类型）

	mapStudent.insert(pair<string, string>("uid001", "aaa"));//用insert函数 用pair（对组）方法插入
	mapStudent["uid002"] = "kaokao"; //用"array"方式插入

	//map的迭代器用法（用于查找是否key是否存在）
	map<string, string>::iterator iter; //定义一个迭代器
	iter = mapStudent.find("uid001");//返回一个迭代器，指向键值为key的元素，没找到则返回尾部的迭代器
	if (iter == mapStudent.end())
		cout << "not find" << endl;
	else
		cout << "find uid001:" << endl;
	
	//map普通寻找
	cout << mapStudent["uid002"] << endl;
	cout << mapStudent.find("uid002")->second << endl;   //此处->不能用.代替
